$NetBSD$

Ensure libgcc from either the corresponding gcc-libs package (preferred) or
this gcc package is found first.  Note that there must not be any whitespace
between $(LINKER_RPATH_FLAG) and the path, otherwise the flag may be
misinterpreted by the linker (e.g. Apple ld).

This only really applies to builds performed outside of pkgsrc.  When using
one of our gcc-libs packages, a custom specs is used to override link_libgcc
and explicitly use the one from gcc-libs.

Disable fixincludes, which does nothing but break everything, and always
has.  See joyent/pkgsrc-legacy#270 and others.

--- gcc/Makefile.in.orig	2023-04-30 08:35:03.000000000 +0000
+++ gcc/Makefile.in
@@ -2326,6 +2326,7 @@ default-d.o: config/default-d.cc
 # Language-independent files.
 
 DRIVER_DEFINES = \
+  -DLINK_LIBGCC_SPEC="\"%D $(LINKER_RPATH_FLAG)$(prefix)/@MACHINE_GNU_PLATFORM@/lib/%M $(LINKER_RPATH_FLAG)$(libdir)/%M \"" \
   -DSTANDARD_STARTFILE_PREFIX=\"$(unlibsubdir)/\" \
   -DSTANDARD_EXEC_PREFIX=\"$(libdir)/gcc/\" \
   -DSTANDARD_LIBEXEC_PREFIX=\"$(libexecdir)/gcc/\" \
@@ -3289,7 +3290,7 @@ stmp-fixinc: gsyslimits.h macro_list fix
 	      gcc_dir=`${PWD_COMMAND}` ; \
 	      export TARGET_MACHINE srcdir SHELL MACRO_LIST && \
 	      cd $(build_objdir)/fixincludes && \
-	      $(SHELL) ./fixinc.sh "$${gcc_dir}/$${fix_dir}" \
+	      $(SHELL) -c true "$${gcc_dir}/$${fix_dir}" \
 	        $(BUILD_SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \
 	  done; \
 	fi
