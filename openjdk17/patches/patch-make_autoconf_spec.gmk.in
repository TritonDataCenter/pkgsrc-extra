$NetBSD$

Ensure interim libraries can be found.  These patches are only appropriate for
pkgsrc, other builds aren't as strict about removing $ORIGIN as us.

--- make/autoconf/spec.gmk.in.orig	2024-06-05 12:04:57.000000000 +0000
+++ make/autoconf/spec.gmk.in
@@ -537,12 +537,12 @@ LD := @LD@
 SDKROOT:=@SDKROOT@
 
 # LDFLAGS used to link the jdk native libraries (C-code)
-LDFLAGS_JDKLIB:=@LDFLAGS_JDKLIB@
+LDFLAGS_JDKLIB:=-Xlinker -R@JAVA_HOME@/lib -Xlinker -R@JAVA_HOME@/lib/server @LDFLAGS_JDKLIB@
 JDKLIB_LIBS:=@JDKLIB_LIBS@
 GLOBAL_LIBS:=@GLOBAL_LIBS@
 
 # LDFLAGS used to link the jdk native launchers (C-code)
-LDFLAGS_JDKEXE:=@LDFLAGS_JDKEXE@
+LDFLAGS_JDKEXE:=-Xlinker -R@JAVA_HOME@/lib -Xlinker -R@JAVA_HOME@/lib/server @LDFLAGS_JDKEXE@
 JDKEXE_LIBS:=@JDKEXE_LIBS@
 
 # LDFLAGS specific to C++ linking.
@@ -651,17 +651,17 @@ JAVA = $(JAVA_CMD) $(JAVA_FLAGS_BIG) $(J
 JAVA_SMALL = $(JAVA_CMD) $(JAVA_FLAGS_SMALL) $(JAVA_FLAGS)
 JAVAC = $(JAVAC_CMD)
 JAVADOC = $(JAVADOC_CMD)
-JAR = $(JAR_CMD)
-JLINK = $(JLINK_CMD)
-JMOD = $(JMOD_CMD) $(JAVA_TOOL_FLAGS_SMALL)
+JAR = LD_LIBRARY_PATH=$(BUILD_JDK)/lib:$(BUILD_JDK)/lib/server $(JAR_CMD)
+JLINK = LD_LIBRARY_PATH=$(BUILD_JDK)/lib:$(BUILD_JDK)/lib/server $(JLINK_CMD)
+JMOD = LD_LIBRARY_PATH=$(BUILD_JDK)/lib:$(BUILD_JDK)/lib/server $(JMOD_CMD) $(JAVA_TOOL_FLAGS_SMALL)
 
 JTREG_JDK := @JTREG_JDK@
 JTREG_JAVA = @FIXPATH@ $(JTREG_JDK)/bin/java $(JAVA_FLAGS_BIG) $(JAVA_FLAGS)
 
 BUILD_JAVA_FLAGS := @BOOTCYCLE_JVM_ARGS_BIG@
-BUILD_JAVA=@FIXPATH@ $(BUILD_JDK)/bin/java $(BUILD_JAVA_FLAGS)
-BUILD_JAVAC=@FIXPATH@ $(BUILD_JDK)/bin/javac
-BUILD_JAR=@FIXPATH@ $(BUILD_JDK)/bin/jar
+BUILD_JAVA=LD_LIBRARY_PATH=$(BUILD_JDK)/lib:$(BUILD_JDK)/lib/server @FIXPATH@ $(BUILD_JDK)/bin/java $(BUILD_JAVA_FLAGS)
+BUILD_JAVAC=LD_LIBRARY_PATH=$(BUILD_JDK)/lib:$(BUILD_JDK)/lib/server @FIXPATH@ $(BUILD_JDK)/bin/javac
+BUILD_JAR=LD_LIBRARY_PATH=$(BUILD_JDK)/lib:$(BUILD_JDK)/lib/server @FIXPATH@ $(BUILD_JDK)/bin/jar
 
 DOCS_REFERENCE_JAVADOC := @DOCS_REFERENCE_JAVADOC@
 
